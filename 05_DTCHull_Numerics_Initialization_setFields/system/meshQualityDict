/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2112                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      meshQualityDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
/*
The meshQualityDict dictionary is used to define the values of many extrema 
encountered during the meshing process to ensure that the resulting mesh is of sufficient quality 
for subsequent calculation. The limits predominantly affect feature conformance, 
i.e. regions most likely to incur local mesh distortion. If the mesh violates any of the limiting values 
it attempts to re-apply the offending changes with updated settings for additional cycles. 
This is an override of the mesh quality settings when the nRelaxedIter has been reached.
*/

// Maximum face non-orthogonality angle [deg]: the angle made by the vector between the two adjacent cell centres across the common face and the face normal
maxNonOrtho 70; // [deg] Maximum non-orthogonality allowed. Set to 180 to disable.

//- Max skewness allowed. Set to <0 to disable.
maxBoundarySkewness 20;
maxInternalSkewness 4; // Maximum internal face skewness

//- Max concaveness allowed. Is angle (in degrees) below which concavity
//  is allowed. 0 is straight face, <0 would be convex face.
//  Set to 180 to disable.
maxConcave 80; // [deg]

//- Minimum pyramid volume. Is absolute volume of cell pyramid.
//  Set to a sensible fraction of the smallest cell volume expected.
//  Set to very negative number (e.g. -1E30) to disable.
minVol 1e-13; // [m^3]

//- Minimum quality of the tetrahedron formed by the face-centre
//  and variable base point minimum decomposition triangles and
//  the cell centre.  Set to very negative number (e.g. -1E30) to
//  disable.
//     <0 = inside out tet,
//      0 = flat tet
//      1 = regular tet
minTetQuality 1e-30;
//  1e-15 (small positive) to enable tracking
// -1e+30 (large negative) for best layer insertion

//- Minimum face area. Set to <0 to disable.
minArea -1; // [m^2]

//- Minimum face twist. Set to <-1 to disable. dot product of face normal
//  and face centre triangles normal
minTwist 0.05;

//- Minimum normalised cell determinant
//  1 = hex, <= 0 = folded or flattened illegal cell
minDeterminant 0.001;

//- minFaceWeight (0 -> 0.5)
minFaceWeight 0.05;

//- minVolRatio (0 -> 1)
minVolRatio 0.01;

//must be >0 for Fluent compatibility
minTriangleTwist -1;

//- If >0 : preserve single cells with all points on the surface if the
//  resulting volume after snapping (by approximation) is larger than
//  minVolCollapseRatio times old volume (i.e. not collapsed to flat cell).
//  If <0 : delete always.
//minVolCollapseRatio 0.5;

// Advanced //
//- Number of error distribution iterations
nSmoothScale 4;
//- Amount to scale back displacement at error points
errorReduction 0.75;

// Optional : some meshing phases allow usage of relaxed rules.
// See e.g. addLayersControls::nRelaxedIter.
relaxed
{
    //- Maximum non-orthogonality allowed. Set to 180 to disable.
    maxNonOrtho 75;
}

// ************************************************************************* //
