/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1; // Scaling factor for the vertex coordinates

vertices
(
    // Bottom most 4 corners
    (-26 -19 -16) // vertex number 0
    (16 -19 -16)  // vertex number 1
    (16 0 -16)
    (-26 0 -16)

    // Below ship geometry
    (-26 -19 -1)
    (16 -19 -1)
    (16 0 -1)
    (-26 0 -1)


    // For free surface refinement
    // Just below waterline
    (-26 -19 0.185)
    (16 -19 0.185)
    (16 0 0.185)
    (-26 0 0.185)

    // Waterline 4 corners
    (-26 -19 0.244)
    (16 -19 0.244)
    (16 0 0.244)
    (-26 0 0.244)

    // Just above waterline
    (-26 -19 0.3)
    (16 -19 0.3)
    (16 0 0.3)
    (-26 0 0.3)


    // Above ship geometry
    (-26 -19 1.6)
    (16 -19 1.6)
    (16 0 1.6)
    (-26 0 1.6)

    // Top most 4 corners
    (-26 -19 4)
    (16 -19 4)
    (16 0 4)
    (-26 0 4)   // vertex number 27
);


blocks
(
    hex (0 1 2 3 4 5 6 7)    // vertex numbers (8 corners of the block)
    (10 10 10)               // numbers of cells in x,y,z directions
    simpleGrading (1 2 3)    // cell expansion ratios in x,y,z directions, simpleGrading: gradually changes the mesh size from starting boudnry to end
);

blocks // Ordered list of vertex labels and mesh size
(
    hex (0 1 2 3 4 5 6 7) (42 19 50) simpleGrading (1 1 0.05) // Bottom most block, cell height(z-dir) at top of block will be only 5% of bottom most one, no changes in length(x-dir) and width(y-dir)
    hex (4 5 6 7 8 9 10 11) (42 19 50) simpleGrading (1 1 1) // Below geometry
    hex (8 9 10 11 12 13 14 15) (42 19 4) simpleGrading (1 1 1) // Below waterline
    hex (12 13 14 15 16 17 18 19) (42 19 4) simpleGrading (1 1 1) //  Above waterline
    hex (16 17 18 19 20 21 22 23) (42 19 40) simpleGrading (1 1 1) // Above geometry
    hex (20 21 22 23 24 25 26 27) (42 19 20) simpleGrading (1 1 5) // Top most block, top most cell height will be 5 times the bottom most one
);

boundary
(
    atmosphere // top most boundry
    {
        type patch;
        faces
        (
            (24 25 26 27)
        );
    }

    inlet // front of ship hull, inlet for water and air
    {
        type patch;
        faces
        (
            (1 2 6 5)
            (5 6 10 9)
            (9 10 14 13)
            (13 14 18 17)
            (17 18 22 21)
            (21 22 26 25)
        );
    }

    outlet // back of ship hull, outlet for water and air
    {
        type patch;
        faces
        (
            (0 4 7 3)
            (4 8 11 7)
            (8 12 15 11)
            (12 16 19 15)
            (16 20 23 19)
            (20 24 27 23)
        );
    }

    bottom // bottom most boundry
    {
        type symmetryPlane;
        faces
        (
            (0 3 2 1)
        );
    }

    side // right of ship hull
    {
        type symmetryPlane;
        faces
        (
            (0 1 5 4)
            (4 5 9 8)
            (8 9 13 12)
            (12 13 17 16)
            (16 17 21 20)
            (20 21 25 24)
        );
    }

    midPlane // ship center line, only right (starboard) half of hull will be used
    {
        type symmetryPlane;
        faces
        (
            (3 7 6 2)
            (7 11 10 6)
            (11 15 14 10)
            (15 19 18 14)
            (19 23 22 18)
            (23 27 26 22)
        );
    }
);

// inlet, outlet, atmosphere:       normal patches
// bottom, side, midPlane:          symmetry planes

// ************************************************************************* //
